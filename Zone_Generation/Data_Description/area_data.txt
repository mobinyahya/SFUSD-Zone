area_data_columns = {
  "json description":
          "In our area_data dataframe, each row is a different area.
          You can access information of column X for area with index j, as self.area_data[X][j]\nHere is an example:
          Number of ge students in area j is: self.area_data[\"ge_students\"][j].
          Here are the set of columns in self.area_data:",
  "FRL": {
    "DataType": "float",
    "Values": "float in [0,1]",
    "Description": "Number of students, eligible for Free or Reduced Priced Lunch (FRL) in each census area.
     The higher FRL, means this census area is more disadvantaged in terms of socioeconomic status.",
  },
  "ge_students": {
    "DataType": "int",
    "Values": "Number of GE (General Education) students in each area",
  },
  "all_prog_students": {
    "DataType": "int",
    "Values": "Total number of students (across all programs including GE, Special Education, etc) in each area",
  },
  "census_area": {
    "DataType": "int",
    "Values": "Census Area number for each area",
  },
  "eng_scores": {
    "DataType": "int",
    "Values": "Sum of total English proficiency score for schools within the census area",
    "Description": "",
  },
  "math_scores": {
    "DataType": "int",
    "Values": "Sum of total math score for schools within the census area",
    "Description": "",
  },
    "greatschools_rating": {
    "DataType": "int, between 1 and 10",
    "Values": "Sum of School quality rating, for schools within the census area, where higher numbers are better",
  },
  "MetStandards": {
    "DataType": "float",
    "Values": "Float between 0 and 1",
    "Description": "Fraction of students at the school that met grade level standards"
  },
  "AvgColorIndex": {
    "DataType": "float",
    "Values": "Float between 1 and 5",
    "Description": "Average of ela_color, math_color, chronic_color, and suspension_color, where Red=1 and Blue=5"
  },
  "all_prog_capacity": {
    "DataType": "int",
    "Values": "Total Number of seats in each area.",
    "Description": "We precomputed total number schools in each area,
    the summed the total number seats across all those schools, for different program types),
  },
  "ge_capacity": {
    "DataType": "int",
    "Values": ""Total Number of GE seats, over all the schools, in the census area",
    "Description": "(We precomputed total number schools in each census area,
     and summed the total number of GE seats across all those schools)",
  },
  "num_schools": {
    "DataType": "int",
    "Values": "Total Number of Schools in the census area",
  }
}
